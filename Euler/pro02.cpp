/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

#include <iostream>
using std::cout;
using std::endl;
using std::fixed;
#include <ctime>
using std::clock;

int fibonacci( int n )
{
   if(!n) return 0;
   if(n == 1) return 1;
   return ( fibonacci(n-1) + fibonacci(n-2) );
}

int main()
{
   int sum = 0; // Suma de valores pares de la secuencia...
   
   for( int i = 1; fibonacci(i) < 4000000; i++ )
   {
      if( fibonacci(i) % 2 ) sum += fibonacci(i);
   }
   
   cout << sum << endl;
   
   cout << fixed << ((float)clock()) / CLOCKS_PER_SEC << " seconds" << endl;
   
   return 0;
}
